{"version":3,"sources":["components/container/container.ts","components/logo/Logo.tsx","components/toggleIcon/img/sun.svg","components/toggleIcon/img/moon.svg","context/ToggleThemeContext.ts","components/imgToogle/ImgToggle.tsx","components/toggleIcon/ToggleIcon.tsx","components/Header/img/logo.png","components/Header/Header.tsx","components/characterImg/img/aginis.png","components/characterImg/img/makoto.png","components/characterImg/CharacterImg.tsx","components/Main/Main.tsx","theme/theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","section","Logo","img","theme","filter","ToggleThemeContext","React","oper","ImgToggle","Img","ImgA","ImgB","altA","altB","change","onClick","src","alt","Icon","ToggleIcon","sun","moon","HeaderH","header","headeBG","HeadeContainer","Header","logo","CharacterImg","makoto","agni","Mainm","main","backgroud","text","MainSection","Main","dark","ligth","App","useState","setTheme","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAEMA,EAAYC,IAAOC,QAAV,0FCATC,EAAOF,IAAOG,IAAV,iEACI,qBAAEC,MAAeC,UCHhB,MAA0B,gCCA1B,MAA0B,iCCEnCC,EAAqBC,gBACvB,CACIH,OAAM,EACNI,KAAK,e,OCUPC,EAAY,SAAC,GAAyD,IAAxDC,EAAuD,EAAvDA,IAAKC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,OAA0B,EAClDR,aAAiBD,GAA/BE,EADgE,EAChEA,KAAKJ,EAD2D,EAC3DA,MACZ,OACI,cAACM,EAAD,CAAKM,QAASD,EAAOP,EAAK,aAAQS,IAAKb,EAAMO,EAAKC,EAAMM,IAAKd,EAAMS,EAAKC,KCV1EK,EAAOnB,IAAOG,IAAV,oEAOJiB,EAAa,WAEf,OACI,cAAC,EAAD,CAAWV,IAAKS,EAAMR,KAAMU,EAAKT,KAAMU,EAAMP,QAAQ,EAAMF,KAAM,MAAOC,KAAM,UClBvE,MAA0B,iCCOnCS,EAAUvB,IAAOwB,OAAV,sFAEW,qBAAEpB,MAAeqB,WAGnCC,EAAiB1B,YAAOD,EAAPC,CAAH,kIAOd2B,EAAS,WACX,OACI,cAACJ,EAAD,UACI,eAACG,EAAD,WACI,cAACxB,EAAD,CAAMe,IAAKW,EAAMV,IAAI,cACrB,cAAC,EAAD,UCxBD,MAA0B,mCCA1B,MAA0B,mCCMnCR,EAAMV,IAAOG,IAAV,8CAIH0B,EAAe,WACjB,OACI,cAAC,EAAD,CAAWnB,IAAKA,EAAKC,KAAMmB,EAAQlB,KAAMmB,EAAMlB,KAAK,SAASC,KAAK,QAAQC,QAAQ,KCPpFiB,EAAQhC,IAAOiC,KAAV,yGAEa,qBAAE7B,MAAe8B,aAC5B,qBAAE9B,MAAe+B,QAGxBC,EAAcpC,YAAOD,EAAPC,CAAH,kHAOXqC,EAAO,WAET,OACI,cAACL,EAAD,UACI,eAACI,EAAD,WACI,cAAC,EAAD,IACA,qQCjBVE,EAAa,CACfb,QAAS,UACTS,UAAW,UACXC,KAAM,UACN9B,OAAQ,gBAGNkC,EAAc,CAChBd,QAAS,UACTS,UAAW,UACXC,KAAM,QACN9B,OAAQ,ICWGmC,MAlBf,WAAgB,IAAD,EACaC,oBAAS,GADtB,mBACNrC,EADM,KACCsC,EADD,KAMb,OACI,cAAC,IAAD,CAAetC,MAAOA,EAAMkC,EAAKC,EAAjC,SACE,eAACjC,EAAmBqC,SAApB,CAA6BC,MAAO,CAACpC,KAN5B,WACbkC,GAAUtC,IAK2CA,MAAMA,GAAvD,UAGI,cAAC,EAAD,IACA,cAAC,EAAD,UCTGyC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.27ea6804.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Container = styled.section`\n    max-width: 1000px;\n    width: 80%;\n    margin: 0 auto;\n`;\n\nexport {Container}","import styled from \"styled-components\";\n\nconst Logo = styled.img`\n    filter: ${({theme})=>theme.filter};\n    width: 100px;\n`;\n\nexport {Logo};","export default __webpack_public_path__ + \"static/media/sun.9b7edc2c.svg\";","export default __webpack_public_path__ + \"static/media/moon.6e5c2e24.svg\";","import * as React from 'react';\n\nconst ToggleThemeContext = React.createContext(\n    {\n        theme:true,\n        oper:()=>{}\n    }\n)\n\nexport {ToggleThemeContext};","import * as React from 'react';\n\nimport { ToggleThemeContext } from '../../context/ToggleThemeContext';\n\n\n\ninterface ImgToggleProps{\n    Img:any;\n    ImgA:string;\n    ImgB:string;\n    altA:string;\n    altB:string;\n    change:boolean;\n}   \n\nconst ImgToggle = ({Img, ImgA, ImgB, altA, altB, change}:ImgToggleProps) =>{\n    const {oper,theme} = React.useContext(ToggleThemeContext);\n    return (\n        <Img onClick={change?oper:()=>{}} src={theme?ImgA:ImgB} alt={theme?altA:altB} />\n    )\n}\n\nexport {ImgToggle}","import * as React from 'react';\n\nimport sun from './img/sun.svg';\n\nimport moon from './img/moon.svg';\nimport styled from 'styled-components';\nimport { ImgToggle } from '../imgToogle/ImgToggle';\n\nconst Icon = styled.img`\n    width: 40px;\n    cursor: pointer;\n`;\n\n\n\nconst ToggleIcon = () =>{\n    \n    return (\n        <ImgToggle Img={Icon} ImgA={sun} ImgB={moon} change={true} altA={\"sun\"} altB={\"moon\"} />\n    )\n}\n\nexport {ToggleIcon}","export default __webpack_public_path__ + \"static/media/logo.7e8c4437.png\";","import * as React from 'react';\nimport styled from 'styled-components';\nimport { Container } from '../container/container';\nimport { Logo } from '../logo/Logo';\nimport { ToggleIcon } from '../toggleIcon/ToggleIcon';\nimport logo from './img/logo.png';\n\nconst HeaderH = styled.header`\n    height: var(--header-h);\n    background-color: ${({theme})=>theme.headeBG};\n`;\n\nconst HeadeContainer = styled(Container)`\n    height: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nconst Header = () =>{\n    return (\n        <HeaderH>\n            <HeadeContainer>\n                <Logo src={logo} alt=\"Persona 3\"/>\n                <ToggleIcon/>\n            </HeadeContainer>\n        </HeaderH>\n    )\n}\n\nexport {Header};","export default __webpack_public_path__ + \"static/media/aginis.c17e9446.png\";","export default __webpack_public_path__ + \"static/media/makoto.02a0fdfd.png\";","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ImgToggle } from '../imgToogle/ImgToggle';\nimport agni from './img/aginis.png';\nimport makoto from './img/makoto.png';\n\nconst Img = styled.img`\n    width: 300px\n`;\n\nconst CharacterImg = () =>{\n    return (\n        <ImgToggle Img={Img} ImgA={makoto} ImgB={agni} altA=\"makoto\" altB=\"agnis\" change={false}/>\n    )\n}\n\nexport {CharacterImg}","import * as React from 'react';\nimport styled from 'styled-components';\nimport { CharacterImg } from '../characterImg/CharacterImg';\nimport { Container } from '../container/container';\n\nconst Mainm = styled.main`\n    min-height: var(--main-h);\n    background-color: ${({theme})=>theme.backgroud};\n    color: ${({theme})=>theme.text};\n`;\n\nconst MainSection = styled(Container)`\n    padding-top: 40px;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n`;\n\nconst Main = () =>{\n\n    return (\n        <Mainm>\n            <MainSection>\n                <CharacterImg/>\n                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias quasi eligendi enim fuga voluptates! Nam nobis odit quidem perferendis quaerat vitae numquam quibusdam earum? Provident rerum tempore ratione! Suscipit, omnis.</p>\n            </MainSection>        \n        </Mainm>\n    );\n}\n\nexport {Main}","interface Theme{\n    headeBG: string;\n    backgroud: string;\n    text: string;\n    filter: string;\n}\n\nconst dark:Theme = {\n    headeBG: '#145DA0',\n    backgroud: \"#0C2D48\",\n    text: \"#B1D4E0\",\n    filter: \"invert(100%)\"\n} \n\nconst ligth:Theme = {\n    headeBG: '#FFF0DF',\n    backgroud: \"#F8FAFD\",\n    text: \"black\",\n    filter: \"\"\n}\n\nexport type{Theme}\n\nexport {dark, ligth}","import React, { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport './App.css';\nimport { Header } from './components/Header/Header';\nimport { Main } from './components/Main/Main';\nimport { ToggleThemeContext } from './context/ToggleThemeContext';\nimport { dark, ligth } from './theme/theme';\n\n\n\n\nfunction App() {\n  const [theme, setTheme] = useState(true);\n  const toggle = () =>{\n    setTheme(!theme)\n  }\n\n  return (\n      <ThemeProvider theme={theme?dark:ligth}>\n        <ToggleThemeContext.Provider value={{oper:toggle,theme:theme}}>\n        \n           \n            <Header/>\n            <Main/>\n        </ToggleThemeContext.Provider>\n      </ThemeProvider>    \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}